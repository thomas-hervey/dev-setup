#!/usr/bin/env bash

function runDots() {
    # Ask for the administrator password upfront
    sudo -v

    # Keep-alive: update existing `sudo` time stamp until the script has finished
    while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

    # Run sections based on command line arguments
    for ARG in "$@"
    do
        # if [ $ARG == "bootstrap" ] || [ $ARG == "all" ]; then
        #     echo ""
        #     echo "------------------------------"
        #     echo "***** SELECTED BOOTSTRAP *****"
        #     echo "Syncing the dev-setup repo to your local machine."
        #     echo "------------------------------"
        #     echo ""
        #     ./bootstrap.sh
        # fi
        if [ $ARG == "osxprep" ] || [ $ARG == "all" ]; then
            # Run the osxprep.sh script
            echo ""
            echo "------------------------------"
            echo "****** SELECTED OSXPREP ******"
            echo "Updating OSX and installing Xcode command line tools"
            echo "------------------------------"
            echo ""
            ./osxprep.sh
        fi
        if [ $ARG == "shell" ] || [ $ARG == "all" ]; then
            # Run the shell.sh script
            echo ""
            echo "------------------------------"
            echo "****** SELECTED SHELL ******"
            echo "Setting up terminal and git"
            echo "------------------------------"
            echo ""
            ./brewCheck.sh
            ./shell.sh
        fi
        if [ $ARG == "brew" ] || [ $ARG == "all" ]; then
            # Run the brew.sh script
            echo ""
            echo "------------------------------"
            echo "******** SELECTED BREW *******"
            echo "Installing Homebrew along with some common formulae and apps."
            echo "This might awhile to complete, as some formulae need to be installed from source."
            echo "------------------------------"
            echo ""
            ./brewCheck.sh
            ./brew.sh
            ./brewCleanup.sh
        fi
        if [ $ARG == "osx" ] || [ $ARG == "all" ]; then
            # Run the osx.sh script
            echo ""
            echo "------------------------------"
            echo "******** SELECTED OSX ********"
            echo "Setting sensible OSX defaults."
            echo "------------------------------"
            echo ""
            ./brewCheck.sh
            ./osx.sh
        fi
        if [ $ARG == "pydata" ] || [ $ARG == "all" ]; then
            # Run the pydata.sh script
            echo "------------------------------"
            echo "****** SELECTED PYDATA *******"
            echo "Setting up Python data development environment."
            echo "------------------------------"
            echo ""
            ./brewCheck.sh
            ./pydata.sh
        fi
        if [ $ARG == "aws" ] || [ $ARG == "all" ]; then
            # Run the aws.sh script
            echo "------------------------------"
            echo "******** SELECTED AWS ********"
            echo "Setting up AWS development environment."
            echo "------------------------------"
            echo ""
            ./brewCheck.sh
            ./aws.sh
        fi
        if [ $ARG == "datastores" ] || [ $ARG == "all" ]; then
            # Run the datastores.sh Script
            echo "------------------------------"
            echo "**** SELECTED DATASTORES *****"
            echo "Setting up data stores."
            echo "------------------------------"
            echo ""
            ./datastores.sh
            ./brewCleanup.sh
        fi
        if [ $ARG == "web" ] || [ $ARG == "all" ]; then
            # Run the webdev.sh Script
            echo "------------------------------"
            echo "******** SELECTED WEB ********"
            echo "Setting up web environment."
            echo "------------------------------"
            echo ""
            ./web.sh
        fi
        if [ $ARG == "android" ] || [ $ARG == "all" ]; then
            # Run the android.sh Script
            echo "------------------------------"
            echo "****** SELECTED ANDROID ******"
            echo "Setting up Android development environment."
            echo "------------------------------"
            echo ""
            ./android.sh
            ./brewCleanup.sh
        fi
    done

    echo "------------------------------"
    echo "Completed running .dots, restart your computer to ensure all updates take effect"
    echo "------------------------------"
}

read -p "This script may overwrite existing files in your ~./dotfiles directory. Are you sure? (y/n) " -n 1;
echo "";
if [[ $REPLY =~ ^[Yy]$ ]]; then
    runDots $@
fi;

unset runDots;
